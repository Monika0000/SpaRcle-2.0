#define _CRT_SECURE_NO_WARNINGS
#include "pch.h"
#include "Mesh.h"
#include "Shader.h"
#include "Texture.h"
using namespace SpaRcle::Graphics;

//{ { 0.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 1, 1 } }, { { 0.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 1, 0 } }, { { 1.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },
//{ { 0.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 1, 0 } }, { { 1.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } }, { { 1.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 1 } },


const std::vector<Vertex> _3D_Models::Cube = {
		// SOUTH
		{ { 0.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },
		//{ { 0.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },

		// EAST
		//{ { 1.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },
		//{ { 1.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },

		// NORTH
		//{ { 1.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },
		//{ { 1.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },

		// WEST
		//{ { 0.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },
		//{ { 0.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },

		// TOP
		//{ { 0.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },
		//{ { 0.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 1.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },

		// BOTTOM
		//{ { 1.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },
		//{ { 1.0f, 0.0f, 1.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 0.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },	{ { 1.0f, 0.0f, 0.0f }, { 0, 0, 0 }, { 0, 0 } },
	};


/*
	 1, 1	0, 1		1, 0		+

*/

namespace SpaRcle {
	namespace Graphics {
		void Mesh::Draw() {
			if ((unsigned long long)this == 0xdddddddddddddddd) return;

			if (!isCompile) Compile();
			if (!isRecompile) Recompile();

			//glColor4f(0.2f, 0.f, 0.f, 1.f);
			glBindVertexArray(this->VAO);
			//glDrawElements(GL_TRIANGLES, count_vertices, GL_UNSIGNED_INT, 0);
			glDrawArrays(GL_TRIANGLES, 0, count_vertices); //Начиная с вершины 0 и рисуем count_vertices штуки. Всего => count_vertices/3 треугольника
			//glDisableVertexAttribArray(0);

			//!======================================

			glBindTexture(GL_TEXTURE_2D, 0); //? IMPORTANT
		}
	}
}